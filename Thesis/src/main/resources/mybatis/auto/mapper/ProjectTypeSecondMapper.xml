<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatis.auto.mapper.ProjectTypeSecondMapper" >
  <resultMap id="BaseResultMap" type="mybatis.auto.model.ProjectTypeSecond" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_id, type_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from x_project_type_second
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from x_project_type_second
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="mybatis.auto.model.ProjectTypeSecond" >
    insert into x_project_type_second (id, project_id, type_id
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{typeId,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="mybatis.auto.model.ProjectTypeSecond" >
    insert into x_project_type_second
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="mybatis.auto.model.ProjectTypeSecond" >
    update x_project_type_second
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="mybatis.auto.model.ProjectTypeSecond" >
    update x_project_type_second
    set project_id = #{projectId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>